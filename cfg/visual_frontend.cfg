#!/usr/bin/env python
PACKAGE = "visual_mtt"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# INSTRUCTIONS
# Don't use this to set default values. Use yaml files, loaded in launch files.
# This cfg specifies which params are dynamically reconfigurable along with
# bounds. The reconfigure callback needs to recieve these and assign them to
# overwrite the class members.

# entries decoded:
# group.add("strict_param_name", type, level, "Mouseover Description", default, min, max)



# general processing
general = gen.add_group("General Processing")
general.add("frame_stride", int_t, 0, "Process Every Nth Frame", 0, 1, 10)
general.add("downsize_scale", double_t, 0, "SD Image Scale", 0, 0.1, 1)



# homography
homography = gen.add_group("Homography")
info = "Homography RANSAC Inlier Threshold"
homography.add("reprojection_error", double_t, 0, info, 0, 0, 5)



# feature manager
feature_manager = gen.add_group("Feature_Manager")
type_enum = gen.enum([ gen.const("Good_Features_to_Track",          int_t, 0, ""),
                       gen.const("Oriented_FAST_and_Rotated_BRIEF", int_t, 1 , "")], "")
info = "Feature Type Used for Point Correspondences"
feature_manager.add("feature_type", int_t, 0, info, 0, edit_method=type_enum)

pair_enum = gen.enum([ gen.const("Lucas_Kanade", str_t, "LK", ""),
                       gen.const("Brute_Force",  str_t, "BF", "")], "")
info = "Matching Method Used for Point Correspondences"
feature_manager.add("matching_method", str_t, 0, info, "LK", edit_method=pair_enum)

info = "Maximum Number of Features to Pair"
feature_manager.add("points_max", int_t, 0, info, 0, 20, 3000)
info = "Desired Number of Features to Pair (For Dynamic Corner Quality)"
feature_manager.add("points_target", int_t, 0, info, 0, 20, 3000)



# source_features
source_features = gen.add_group("Source_Feature_Outliers")
source_features.add("minimum_pixel_velocity", double_t, 0, "Minimum Pixel Velocity", 0, 0, 0.02)
source_features.add("maximum_pixel_velocity", double_t, 0, "Maximum Pixel Velocity", 0, 0, 0.02)



exit(gen.generate(PACKAGE, "visual_frontend", "visual_frontend"))