#!/usr/bin/env python
PACKAGE = "visual_mtt"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

motion_model_type = gen.enum([
        gen.const("Constant_Velocity"       , int_t, 0, ""),
        gen.const("Constant_Acceleration"   , int_t, 1, ""),
        gen.const("Constant_Jerk"           , int_t, 2, ""),
    ], "")

# INSTRUCTIONS
# Don't use this to set default values. Use yaml files, loaded in launch files.
# This cfg specifies which params are dynamically reconfigurable along with
# bounds. The reconfigure callback needs to recieve these and assign them to
# overwrite the class members.

# entries decoded:
# group.add("strict_param_name", type, level, "Mouseover Description", default, min, max)

# general
general = gen.add_group("General Parameters")
general.add("dt", double_t, 0, "timestep", 0, 0, 1)

# R-RANSAC specific parameters
rransac = gen.add_group("RRANSAC Propagation Specific Parameters")
rransac.add("Nw", int_t, 0, "Window/history size", 0, 1, 20)
rransac.add("M", int_t, 0, "Number of models to allow in memory", 0, 1, 50)
rransac.add("tauR", double_t, 0, "Inlier region threshold", 0, 0, 0.5)
rransac.add("sigmaR_pos", double_t, 0, "Measurement Covariance for position data", 0, 0, 0.05)
rransac.add("sigmaR_vel", double_t, 0, "Measurement Covariance for velocity data", 0, 0, 0.05)
rransac.add("rransac_motion_model", int_t, 0, "Propagation Motion Model", 0, edit_method=motion_model_type)

# RANSAC specific parameters
ransac = gen.add_group("RANSAC Initialization Specific Parameters")
ransac.add("ell", int_t, 0, "Maximum RANSAC iterations", 0, 1, 200)
ransac.add("guided_sampling_threshold", double_t, 0, "Random measurement must be within this distance to the static outlier", 0, 0, 5)
ransac.add("tauR_RANSAC", double_t, 0, "Inlier region threshold", 0, 0, 0.5)
ransac.add("gamma", double_t, 0, "Measurement Covariance for velocity data", 0, 0, 0.005)
ransac.add("sigmaR_pos_RANSAC", double_t, 0, "Measurement Covariance for position data", 0, 0, 0.05)
ransac.add("ransac_motion_model", int_t, 0, "Initialization Motion Model", 0, edit_method=motion_model_type)

# model merging parameters
merging = gen.add_group("Model Merging Parameters")
merging.add("tau_vel_percent_diff", double_t, 0, "Percent difference of two models in question (max)", 0, 0, 1)
merging.add("tau_vel_abs_diff", double_t, 0, "Absolute difference of two models in question (max)", 0, 0, 5)
merging.add("tau_angle_abs_diff", double_t, 0, "Absolute difference of the heading (deg) of two models in question (max)", 0, 0, 180)
merging.add("tau_xpos_abs_diff", double_t, 0, "Absolute x-position difference of two models in question (max)", 0, 0, 0.5)
merging.add("tau_ypos_abs_diff", double_t, 0, "Absolute y-position difference of two models in question (max)", 0, 0, 0.5)

# model pruning parameters
pruning = gen.add_group("Model Pruning Parameters")
pruning.add("frame_cols", double_t, 0, "Width of surveillance area", 0, 0, 2000)
pruning.add("frame_rows", double_t, 0, "Height of surveillance area", 0, 0, 2000)
pruning.add("tau_CMD_prune", int_t, 0, "Prune models that have more than this many consecutive missed detections", 0, 1, 20)

# track (i.e., good model) parameters
pruning = gen.add_group("Track Parameters ie Good Models")
pruning.add("tau_rho", double_t, 0, "Good Model threshold (min)", 0, 0, 1)
pruning.add("tau_CMD", int_t, 0, "Consecutive Missed Detections threshold (max)", 0, 1, 20)
pruning.add("tau_Vmax", double_t, 0, "Maximum model speed", 0, 0, 0.2)
pruning.add("tau_T", int_t, 0, "Lifetime threshold (min)", 0, 1, 20)

exit(gen.generate(PACKAGE, "rransac", "rransac"))